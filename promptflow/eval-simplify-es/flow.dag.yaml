$schema: https://azuremlschemas.azureedge.net/promptflow/latest/Flow.schema.json
environment:
  python_requirements_txt: requirements.txt
inputs:
  original:
    type: string
    default: Als Vernehmlassungsverfahren wird diejenige Phase innerhalb des
      Vorverfahrens der Gesetzgebung bezeichnet, in der Vorhaben des Bundes von
      erheblicher politischer, finanzieller, wirtschaftlicher, ökologischer,
      sozialer oder kultureller Tragweite auf ihre sachliche Richtigkeit,
      Vollzugstauglichkeit und Akzeptanz hin geprüft werden.   Die Vorlage wird
      zu diesem Zweck den Kantonen, den in der Bundesversammlung vertretenen
      Parteien, den Dachverbänden der Gemeinden, Städte und der Berggebiete, den
      Dachverbänden der Wirtschaft sowie weiteren, im Einzelfall interessierten
      Kreisen unterbreitet.
  simplified:
    type: string
    default: Das Vernehmlassungsverfahren ist ein Teil der Gesetzgebung. Man prüft
      dabei, ob ein Gesetz richtig und gut ist. Das macht man, bevor das Gesetz
      in Kraft tritt.\n\nDie Vorlage geht an verschiedene Gruppen. Dazu gehören
      die Kantone, die Parteien im Parlament, die Verbände der Gemeinden und
      Städte sowie der Berggebiete, die Wirtschafts-Verbände und weitere
      Interessierte.
  model:
    type: string
    default: gpt-4o
  prompt_used:
    type: string
    default: "Simplify the following text:"
outputs:
  zix_score_simplified:
    type: string
    reference: ${score_simplified.output}
  zix_score_original:
    type: string
    reference: ${score_original.output}
  level_original:
    type: string
    reference: ${level_original.output}
  level_simplified:
    type: string
    reference: ${level_simplified.output}
  estimated_cost:
    type: string
    reference: ${estimate_cost.output.cost}
  value_for_money:
    type: string
    reference: ${estimate_cost.output.value}
nodes:
- name: aggregate_scores
  type: python
  source:
    type: code
    path: aggregate.py
  inputs:
    scores_original: ${score_original.output}
    scores_simplified: ${score_simplified.output}
    estimated_cost: ${estimate_cost.output.cost}
    value_for_money: ${estimate_cost.output.value}
  aggregation: true
- name: score_simplified
  type: python
  source:
    type: code
    path: calculate_score.py
  inputs:
    text: ${inputs.simplified}
- name: level_original
  type: python
  source:
    type: code
    path: cefr_level.py
  inputs:
    score: ${score_original.output}
  aggregation: false
- name: score_original
  type: python
  source:
    type: code
    path: calculate_score.py
  inputs:
    text: ${inputs.original}
- name: level_simplified
  type: python
  source:
    type: code
    path: cefr_level.py
  inputs:
    score: ${score_simplified.output}
- name: estimate_cost
  type: python
  source:
    type: code
    path: estimate_cost.py
  inputs:
    original: ${inputs.original}
    simplified: ${inputs.simplified}
    model: ${inputs.model}
    prompt_used: ${inputs.prompt_used}
    score_original: ${score_original.output}
    score_simplified: ${score_simplified.output}
